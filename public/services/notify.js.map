{"version":3,"sources":["services/notify.ts"],"names":["Notification","Notification.constructor","Notification.show"],"mappings":";;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,2BAAyB,iBAAiB,CAAC,CAAA;AAC3C,QAAO,yBAAyB,CAAC,CAAA;AACjC,QAAO,uBAAuB,CAAC,CAAA;AAE/B;IAKIA;QALJC,iBAYCA;QANOA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,uBAAUA,CAACA,UAAAA,QAAQA,IAAIA,OAAAA,KAAIA,CAACA,cAAcA,GAAGA,QAAQA,EAA9BA,CAA8BA,CAACA,CAACA,KAAKA,EAAEA,CAACA;IACrFA,CAACA;;IAEDD,2BAAIA,GAAJA,UAAKA,IAAWA,EAAEA,OAAcA;QAC5BE,IAAIA,CAACA,cAAcA,CAACA,IAAIA,CAACA,EAACA,IAAIA,EAAEA,IAAIA,EAAEA,OAAOA,EAAEA,OAAOA,EAAEA,IAAIA,EAACA,IAAIA,EAACA,CAACA,CAACA;IACxEA,CAACA;IAXLF;QAACA,iBAAUA,EAAEA;;qBAYZA;IAADA,mBAACA;AAADA,CAZA,AAYCA,IAAA;AAXY,oBAAY,eAWxB,CAAA","file":"services/notify.js","sourcesContent":["import {Injectable} from \"angular2/core\";\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class Notification {\n    notify: Observable<Object>;\n    private notifyObserver: any;\n    \n    constructor() {\n        this.notify = new Observable(observer => this.notifyObserver = observer).share();\n    };\n    \n    show(type:String, message:String) {\n        this.notifyObserver.next({type: type, message: message, show:true}); \n    }\n}"],"sourceRoot":"/source/"}