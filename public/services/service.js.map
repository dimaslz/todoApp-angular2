{"version":3,"sources":["services/service.ts"],"names":[],"mappings":"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","file":"services/service.js","sourcesContent":["import {Injectable} from \"angular2/core\";\nimport {Task} from \"../models/task\";\nimport {Http, Headers, HTTP_PROVIDERS} from 'angular2/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/map';\nimport {Ng2NotifyService} from 'ng2-notify/notify';\n\nvar apiUrl = 'http://todo-node-api.dimaslz.io';\ndeclare var io: any;\n\n@Injectable()\nexport class TodoService {\n    todos$: Observable<Array<Task>>;\n    update: Observable<boolean>;\n    private _todosObserver: any;\n    private _updateObserver: any;\n    private _dataStore : {\n        todos: Array<Task>\n    };\n    public socket: any;\n    \n    public todos = [];\n    \n    constructor(private http: Http, private notification: Ng2NotifyService) {\n        this.socket = io();\n        \n        this.todos$ = new Observable(observer => this._todosObserver = observer).share();\n        this.update = new Observable(observer => this._updateObserver = observer).share();\n        \n        this._dataStore = { todos: [] };\n    };\n    \n    public getList(status = '') {\n        this.http.get(apiUrl+'/api/list', {search: 'status='+status})\n        .map((response) => {\n            // return response.json().data;\n            var data: Array<Task> = [];\n            response.json().data.forEach(function(value, index) {\n                data.push(new Task(value._id, value.name, value.description, value.status, value.date));\n            });\n            \n            return data;\n        })\n        .subscribe((data) => {\n            this._dataStore.todos = data;\n            \n            this._todosObserver.next(this._dataStore.todos);\n        }, error => console.error('Could not load todos'));\n    }\n    \n    addTask(task:Task) {\n        var str = '';\n        Object.getOwnPropertyNames(task).forEach(function(val, idx, array) {\n            str += val + '=' + task[val]+'&';\n        });\n        let creds = JSON.stringify(str);\n        \n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.post(apiUrl+'/api/add', creds, { headers: headers })\n            .map(response => response.json()).subscribe(data => {\n                var data = data.result;\n                var objTask = new Task(data._id, data.name, data.description, data.status, data.date);\n                this._todosObserver.next(this._dataStore.todos);\n                this.socket.emit(\"reloadList\", {type: 'success', message: 'Task added'});\n                // this.notification.show('success', 'Task Added');\n                // this.reloadList();\n        }, error => console.log('Could not create todo.'));\n    }\n    \n    removeTask(task) {\n        var headers = new Headers();\n        this.http.delete(apiUrl+'/api/'+task.id+'/delete')\n            .map(response => response.json()).subscribe(data => {\n                // this.notification.show('success', 'Task Removed');\n                // this.reloadList();\n                this.socket.emit(\"reloadList\", {type: 'success', message: 'Task deleted'});\n        }, error => console.log('Could not create todo.'));\n    }\n    \n    reloadList() {\n        this._updateObserver.next(true);\n    }\n    \n    updateStatus(task, type) {\n        var str = '';\n        var currentStatus = task.status;\n        task.status = type;\n        Object.getOwnPropertyNames(task).forEach(function(val, idx, array) {\n            str += val + '=' + task[val]+'&';\n        });\n        let creds = JSON.stringify(str);\n        \n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        this.http.put(apiUrl+'/api/'+task.id+'/update/status', creds, { headers: headers })\n            .map(response => response.json()).subscribe(data => {\n                // this.reloadList();\n                // this.notification.show('success', 'Task '+type);\n                this.socket.emit(\"reloadList\", {type: 'success', message: 'Task'});\n        }, error => console.log('Could not create todo.'));\n    }\n}"],"sourceRoot":"/source/"}