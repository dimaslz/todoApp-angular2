{"version":3,"sources":["directives/todo.ts"],"names":["Todo","Todo.constructor","Todo.ngOnInit","Todo.send","Todo.addItem","Todo.removeItem","Todo.go","Todo.selectType"],"mappings":"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","file":"directives/todo.js","sourcesContent":["import {bootstrap} from \"angular2/platform/browser\";\nimport {Component, View, OnInit} from \"angular2/core\";\nimport {TodoList} from \"./list\";\nimport {TodoService} from \"../services/service\";\nimport {Task} from \"../models/task\";\nimport {Http, HTTP_BINDINGS,HTTP_PROVIDERS} from 'angular2/http';\nimport {Notify} from '../directives/notify';\nimport {Notification} from '../services/notify';\n\ndeclare var io: any;\n\n@Component({\n    selector: 'todo',\n    templateUrl: './directives/todo.tpl.html',\n    directives: [TodoList, Notify]\n})\n\n// @View({\n//     templateUrl:string = './directives/todo.tpl.html',\n//     directives: [TodoList, Notify]\n// })\n\nclass Todo implements OnInit {\n    taskInput:Task = new Task(\"\", \"\", \"\", \"\", new Date());\n    public typeList = 'todo';\n    public componentTodos;\n    socket: any;\n    messages: Array<String>;\n    \n    ngOnInit() {\n        this.todoService.todos$.subscribe(uploadedTodos => {\n            console.log('uploadedTodos', uploadedTodos);\n            this.componentTodos = uploadedTodos;\n        });\n        this.todoService.getList('todo');\n        this.socket = io();\n        this.socket.on(\"chat_message\", (msg) => {\n            console.log('socket message_>     ', msg);\n            this.todoService.getList('todo');\n            // this.messages.push(msg);\n        });\n        \n    }\n    \n    constructor(public todoService: TodoService, public notification: Notification) {\n        // this.socket = io();\n        // this.socket.on(\"chat_message\", (msg) => {\n        //     console.log('socket message_>     ', msg);\n        //     // this.messages.push(msg);\n        // });\n    };\n    \n    public send(message) {\n        console.log('chkic');\n        this.socket.emit(\"chat_message\", message);\n    }\n    \n    /**\n     * addItem\n     */\n    public addItem() {\n        this.todoService.addTask(this.taskInput);\n        this.socket.emit(\"chat_message\", this.taskInput);\n        this.taskInput = new Task(\"\", \"\", \"\", \"\", new Date());\n    }\n    \n    /**\n     * removeItem\n     */\n    public removeItem(id:string) {\n        this.todoService.removeTask(id);\n    }\n    \n    public go() {\n        this.notification.show('warning', 'test message');\n    }\n    \n    public selectType(type:string) {\n        this.typeList = type;\n        this.todoService.getList(type);\n    }\n}\n\nbootstrap(Todo, [TodoService, Http, HTTP_PROVIDERS, Notification, HTTP_BINDINGS]).catch(console.error);"],"sourceRoot":"/source/"}