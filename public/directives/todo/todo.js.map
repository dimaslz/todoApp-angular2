{"version":3,"sources":["directives/todo/todo.ts"],"names":["Todo","Todo.constructor","Todo.ngOnInit","Todo.send","Todo.addItem","Todo.removeItem","Todo.go","Todo.selectType"],"mappings":";;;;;;;;;AAAA,wBAAwB,2BAA2B,CAAC,CAAA;AACpD,qBAAsC,eAAe,CAAC,CAAA;AACtD,qBAAuB,aAAa,CAAC,CAAA;AACrC,wBAA0B,wBAAwB,CAAC,CAAA;AACnD,qBAAmB,mBAAmB,CAAC,CAAA;AACvC,qBAAiD,eAAe,CAAC,CAAA;AACjE,2BAAwB,0BAA0B,CAAC,CAAA;AACnD,2BAA+B,2BAA2B,CAAC,CAAA;AAO3D;IAmCIA,cAAmBA,WAAwBA,EAASA,YAA8BA;QAA/DC,gBAAWA,GAAXA,WAAWA,CAAaA;QAASA,iBAAYA,GAAZA,YAAYA,CAAkBA;QAvBlFA,cAASA,GAAQA,IAAIA,WAAIA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,IAAIA,IAAIA,EAAEA,CAACA,CAACA;QAC/CA,aAAQA,GAAGA,EAAEA,CAACA;IA6BrBA,CAACA;IAxBDD,uBAAQA,GAARA;QAAAE,iBAeCA;QAdGA,IAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,WAAWA,EAAEA,IAAIA,CAACA,CAACA;QAC5CA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,SAASA,CAACA,UAAAA,aAAaA;YAC3CA,KAAIA,CAACA,cAAcA,GAAGA,aAAaA,CAACA;QACxCA,CAACA,CAACA,CAACA;QACHA,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;IAU5CA,CAACA;;IAWMF,mBAAIA,GAAXA,UAAYA,OAAOA;QACfG,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,cAAcA,EAAEA,OAAOA,CAACA,CAACA;IAC9CA,CAACA;IAKMH,sBAAOA,GAAdA;QACII,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;QAEzCA,IAAIA,CAACA,SAASA,GAAGA,IAAIA,WAAIA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,IAAIA,IAAIA,EAAEA,CAACA,CAACA;IAC1DA,CAACA;IAKMJ,yBAAUA,GAAjBA,UAAkBA,EAASA;QACvBK,IAAIA,CAACA,WAAWA,CAACA,UAAUA,CAACA,EAAEA,CAACA,CAACA;IACpCA,CAACA;IAEML,iBAAEA,GAATA;QACIM,IAAIA,CAACA,YAAYA,CAACA,IAAIA,CAACA,SAASA,EAAEA,cAAcA,CAACA,CAACA;IACtDA,CAACA;IAEMN,yBAAUA,GAAjBA,UAAkBA,IAAWA;QACzBO,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;QACrBA,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;IACnCA,CAACA;IAvELP;QAACA,gBAASA,CAACA;YACPA,QAAQA,EAAEA,MAAMA;YAChBA,WAAWA,EAAEA,iCAAiCA;YAC9CA,UAAUA,EAAEA,CAACA,eAAQA,EAAEA,sBAASA,CAACA;SACpCA,CAACA;;aAoEDA;IAADA,WAACA;AAADA,CAxEA,AAwECA,IAAA;AAED,mBAAS,CAAC,IAAI,EAAE,CAAC,qBAAW,EAAE,WAAI,EAAE,qBAAc,EAAE,6BAAgB,EAAE,oBAAa,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC","file":"directives/todo/todo.js","sourcesContent":["import {bootstrap} from \"angular2/platform/browser\";\nimport {Component, View, OnInit} from \"angular2/core\";\nimport {TodoList} from \"./list/list\";\nimport {TodoService} from \"../../services/service\";\nimport {Task} from \"../../models/task\";\nimport {Http, HTTP_BINDINGS,HTTP_PROVIDERS} from 'angular2/http';\nimport {Ng2Notify} from '../ng2-notify/ng2-notify';\nimport {Ng2NotifyService} from '../../services/ng2-notify';\n// import {Notification} from '../../services/notify';\n// import {Ng2Notify, Ng2NotifyService} from 'ng2-notify/components';\n// import {HelloWorld} from 'angular2-library-example/components';\n\ndeclare var io: any;\n\n@Component({\n    selector: 'todo',\n    templateUrl: './directives/todo/todo.tpl.html',\n    directives: [TodoList, Ng2Notify]\n})\n\n// @View({\n//     templateUrl:string = './directives/todo.tpl.html',\n//     directives: [TodoList, Notify]\n// })\n\nclass Todo implements OnInit {\n    taskInput:Task = new Task(\"\", \"\", \"\", \"\", new Date());\n    public typeList = '';\n    public componentTodos;\n    socket: any;\n    messages: Array<String>;\n    \n    ngOnInit() {\n        this.notification.config('right-top', 5000);\n        this.todoService.todos$.subscribe(uploadedTodos => {\n            this.componentTodos = uploadedTodos;\n        });\n        this.todoService.getList(this.typeList);\n        \n        // this.notification.config('right-bottom', 5000);\n        // this.socket = io();\n        // this.socket.on(\"chat_message\", (msg) => {\n        //     console.log('socket message_>     ', msg);\n        //     this.todoService.getList('todo');\n        //     // this.messages.push(msg);\n        // });\n        \n    }\n    \n    constructor(public todoService: TodoService, public notification: Ng2NotifyService) {\n        // this.notification.config('right-bottom');\n        // this.socket = io();\n        // this.socket.on(\"chat_message\", (msg) => {\n        //     console.log('socket message_>     ', msg);\n        //     // this.messages.push(msg);\n        // });\n    };\n    \n    public send(message) {\n        this.socket.emit(\"chat_message\", message);\n    }\n    \n    /**\n     * addItem\n     */\n    public addItem() {\n        this.todoService.addTask(this.taskInput);\n        // this.socket.emit(\"chat_message\", this.taskInput);\n        this.taskInput = new Task(\"\", \"\", \"\", \"\", new Date());\n    }\n    \n    /**\n     * removeItem\n     */\n    public removeItem(id:string) {\n        this.todoService.removeTask(id);\n    }\n    \n    public go() {\n        this.notification.show('warning', 'test message');\n    }\n    \n    public selectType(type:string) {\n        this.typeList = type;\n        this.todoService.getList(type);\n    }\n}\n\nbootstrap(Todo, [TodoService, Http, HTTP_PROVIDERS, Ng2NotifyService, HTTP_BINDINGS]).catch(console.error);"],"sourceRoot":"/source/"}