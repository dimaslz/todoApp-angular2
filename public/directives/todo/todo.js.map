{"version":3,"sources":["directives/todo/todo.ts"],"names":["Todo","Todo.constructor","Todo.ngOnInit","Todo.addItem"],"mappings":";;;;;;;;;AAAA,qBAAoE,eAAe,CAAC,CAAA;AACpF,qBAAuB,aAAa,CAAC,CAAA;AACrC,wBAA0B,wBAAwB,CAAC,CAAA;AACnD,qBAAmB,mBAAmB,CAAC,CAAA;AACvC,qBAAiD,eAAe,CAAC,CAAA;AACjE,uBAA0C,mBAAmB,CAAC,CAAA;AAC9D,uBAA8E,iBAAiB,CAAC,CAAA;AAGhG;IA0BIA,cACWA,WAAwBA,EACxBA,MAAwBA,EACxBA,YAA6BA,EAC7BA,MAAkBA;QA9BjCC,iBAiDCA;QAtBcA,gBAAWA,GAAXA,WAAWA,CAAaA;QACxBA,WAAMA,GAANA,MAAMA,CAAkBA;QACxBA,iBAAYA,GAAZA,YAAYA,CAAiBA;QAC7BA,WAAMA,GAANA,MAAMA,CAAYA;QAnBrBA,cAASA,GAAQA,IAAIA,WAAIA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,IAAIA,IAAIA,EAAEA,CAACA,CAACA;QACtDA,aAAQA,GAAGA,EAAEA,CAACA;QACdA,mBAAcA,GAAGA,EAAEA,CAACA;QAmBxBA,IAAIA,CAACA,MAAMA,GAAGA,EAAEA,EAAEA,CAACA;QACnBA,IAAIA,CAACA,MAAMA,CAACA,EAAEA,CAACA,YAAYA,EAAEA,UAACA,YAAYA;YACtCA,KAAIA,CAACA,YAAYA,CAACA,IAAIA,CAACA,YAAYA,CAACA,IAAIA,EAAEA;gBACtCA,OAAOA,EAAEA,YAAYA,CAACA,OAAOA;aAChCA,CAACA,CAACA;YAEHA,KAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,KAAIA,CAACA,QAAQA,CAACA,CAACA;QAC5CA,CAACA,CAACA,CAACA;IACPA,CAACA;IAtBDD,uBAAQA,GAARA;QAAAE,iBAMCA;QALGA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,CAACA,SAASA,CAACA,UAAAA,aAAaA;YAC3CA,KAAIA,CAACA,cAAcA,GAAGA,aAAaA,CAACA;QACxCA,CAACA,CAACA,CAACA;QACHA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,MAAMA,CAACA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,MAAMA,CAACA,GAAGA,EAAEA,CAACA;QACvEA,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;IAC5CA,CAACA;;IAqBMF,sBAAOA,GAAdA;QACIG,IAAIA,CAACA,WAAWA,CAACA,OAAOA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA;QACzCA,IAAIA,CAACA,SAASA,GAAGA,IAAIA,WAAIA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,EAAEA,IAAIA,IAAIA,EAAEA,CAACA,CAACA;IAC1DA,CAACA;IAhDLH;QAACA,gBAASA,CAACA;YACPA,QAAQA,EAAEA,MAAMA;YAChBA,SAASA,EAAEA,CAACA,yBAAgBA,EAAEA,qBAAWA,EAAEA,WAAIA,EAAEA,oBAAaA,EAAEA,qBAAcA,CAACA;SAClFA,CAACA;QAEDA,WAAIA,CAACA;YACFA,WAAWA,EAAEA,iCAAiCA;YAC9CA,UAAUA,EAAEA,CAACA,eAAQA,EAAEA,kBAASA,EAAEA,0BAAiBA,EAAEA,mBAAUA,CAACA;SACnEA,CAACA;;aAyCDA;IAADA,WAACA;AAADA,CAjDA,AAiDCA,IAAA;AAvCY,YAAI,OAuChB,CAAA","file":"directives/todo/todo.js","sourcesContent":["import {Component, View, OnInit, Inject, forwardRef, Injector} from \"angular2/core\";\nimport {TodoList} from \"./list/list\";\nimport {TodoService} from \"../../services/service\";\nimport {Task} from \"../../models/task\";\nimport {Http, HTTP_BINDINGS,HTTP_PROVIDERS} from 'angular2/http';\nimport {Ng2Notify, Ng2NotifyService} from 'ng2-notify/notify';\nimport {ROUTER_DIRECTIVES, RouteParams, RouteConfig, Router, RouterLink} from 'angular2/router';\n\ndeclare var io: any;\n@Component({\n    selector: 'todo',\n    providers: [Ng2NotifyService, TodoService, Http, HTTP_BINDINGS, HTTP_PROVIDERS]\n})\n\n@View({\n    templateUrl: './directives/todo/todo.tpl.html',\n    directives: [TodoList, Ng2Notify, ROUTER_DIRECTIVES, RouterLink]\n})\n\nexport class Todo implements OnInit {\n    private taskInput:Task = new Task(\"\", \"\", \"\", \"\", new Date());\n    private typeList = '';\n    private componentTodos = [];\n    public  socket: any;\n    private messages: Array<String>;\n    private ngService;\n    \n    ngOnInit() {\n        this.todoService.todos$.subscribe(uploadedTodos => {\n            this.componentTodos = uploadedTodos;\n        });\n        this.typeList = this.params.get('list') ? this.params.get('list') : '';\n        this.todoService.getList(this.typeList);\n    }\n    \n    constructor(\n        public todoService: TodoService, \n        public notify: Ng2NotifyService,\n        public notification:Ng2NotifyService,\n        public params:RouteParams) {\n        \n        this.socket = io();\n        this.socket.on(\"reloadList\", (notification) => {\n            this.notification.show(notification.type, {\n                message: notification.message\n            });\n            \n            this.todoService.getList(this.typeList);\n        });\n    };\n\n    /**\n     * addItem\n     */\n    public addItem() {\n        this.todoService.addTask(this.taskInput);\n        this.taskInput = new Task(\"\", \"\", \"\", \"\", new Date());\n    }\n}"],"sourceRoot":"/source/"}