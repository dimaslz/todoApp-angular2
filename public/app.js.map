{"version":3,"sources":["app.ts"],"names":["App","App.constructor"],"mappings":";;;;;;;;;AAAA,qBAA+C,eAAe,CAAC,CAAA;AAC/D,uBAA2H,iBAAiB,CAAC,CAAA;AAC7I,qBAAmB,wBAAwB,CAAC,CAAA;AAC5C,wBAAwB,2BAA2B,CAAC,CAAA;AAIpD;IAoCIA,aAAoBA,MAAcA;QApCtCC,iBAgDCA;QAZuBA,WAAMA,GAANA,MAAMA,CAAQA;QAC9BA,IAAIA,CAACA,MAAMA,GAAGA,EAAEA,EAAEA,CAACA;QACnBA,IAAIA,CAACA,MAAMA,CAACA,EAAEA,CAACA,aAAaA,EAAEA,UAACA,KAAKA;YAChCA,EAAEA,CAAAA,CAACA,KAAIA,CAACA,YAAYA,IAAIA,KAAKA,CAACA,CAACA,CAACA;gBAC5BA,KAAIA,CAACA,YAAYA,GAAGA,KAAKA,CAACA;gBAC1BA,KAAIA,CAACA,MAAMA,CAACA,aAAaA,CAACA,KAAKA,CAACA,CAACA;YACrCA,CAACA;QACLA,CAACA,CAACA,CAACA;QACHA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,UAACA,KAAKA;YACxBA,KAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,aAAaA,EAAEA,KAAKA,CAACA,CAACA;QAC3CA,CAACA,CAACA,CAAAA;IACNA,CAACA;IA/CLD;QAACA,gBAASA,CAAEA;YACRA,QAAQA,EAAEA,KAAKA;YACfA,SAASA,EAAEA,CAACA,yBAAgBA,EAAEA,cAAOA,CAACA,yBAAgBA,EAAEA,EAACA,QAAQA,EAAEA,6BAAoBA,EAACA,CAACA,CAACA;SAC7FA,CAACA;QAEDA,WAAIA,CAAEA;YACHA,QAAQA,EAAEA,iDAETA;YACDA,UAAUA,EAAEA,CAACA,WAAIA,EAAEA,mBAAUA,EAAEA,0BAAiBA,CAACA;SACpDA,CAACA;QAEDA,oBAAWA,CAACA;YACTA;gBACIA,IAAIA,EAAEA,YAAYA;gBAClBA,IAAIA,EAAEA,SAASA;gBACfA,SAASA,EAAEA,WAAIA;gBACfA,YAAYA,EAAEA,IAAIA;aACrBA;YACDA;gBACIA,IAAIA,EAAEA,qBAAqBA;gBAC3BA,IAAIA,EAAEA,YAAYA;gBAClBA,SAASA,EAAEA,WAAIA;aAClBA;YACDA;gBACIA,IAAIA,EAAEA,cAAcA;gBACpBA,IAAIA,EAAEA,UAAUA;gBAChBA,SAASA,EAAEA,WAAIA;aAClBA;YACDA,EAAEA,IAAIA,EAAEA,KAAKA,EAAEA,UAAUA,EAAEA,CAACA,SAASA,CAACA,EAAEA;SAC3CA,CAACA;;YAkBDA;IAADA,UAACA;AAADA,CAhDA,AAgDCA,IAAA;AAhBY,WAAG,MAgBf,CAAA;AAED,mBAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC","file":"app.js","sourcesContent":["import {Component, provide, View, Inject} from 'angular2/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS, Router, RouterLink, LocationStrategy, HashLocationStrategy} from 'angular2/router';\nimport {Todo} from './directives/todo/todo';\nimport {bootstrap} from 'angular2/platform/browser';\n\ndeclare var io: any;\n\n@Component ({\n    selector: 'app',\n    providers: [ROUTER_PROVIDERS, provide(LocationStrategy, {useClass: HashLocationStrategy})],\n})\n\n@View ({\n    template: `\n        <router-outlet></router-outlet>\n    `,\n    directives: [Todo, RouterLink, ROUTER_DIRECTIVES],\n})\n\n@RouteConfig([\n    {\n        path: '/tasks/all',\n        name: 'TaskAll',\n        component: Todo,\n        useAsDefault: true\n    },\n    {\n        path: '/tasks/detail/:name',\n        name: 'TaskDetail',\n        component: Todo,\n    },\n    {\n        path: '/tasks/:list',\n        name: 'TaskList',\n        component: Todo,\n    },\n    { path: '/**', redirectTo: ['TaskAll'] }\n])\n\nexport class App {\n    private socket: any;\n    private currentRoute: string;\n    \n    constructor(private router: Router) {\n        this.socket = io();\n        this.socket.on(\"changeRoute\", (route) => {\n            if(this.currentRoute != route) {\n                this.currentRoute = route;\n                this.router.navigateByUrl(route);   \n            }\n        });\n        this.router.subscribe((route) => {\n            this.socket.emit(\"changeRoute\", route);\n        })\n    }\n}\n\nbootstrap(App, []).catch(console.error);"],"sourceRoot":"/source/"}