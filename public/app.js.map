{"version":3,"sources":["app.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+C,eAAe,CAAC,CAAA;AAC/D,uBAA2H,iBAAiB,CAAC,CAAA;AAC7I,qBAAmB,wBAAwB,CAAC,CAAA;AAC5C,wBAAwB,2BAA2B,CAAC,CAAA;AAoCpD;IAII,aAAoB,MAAc;QAJtC,iBAgBC;QAZuB,WAAM,GAAN,MAAM,CAAQ;QAC9B,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAK;YAChC,EAAE,CAAA,CAAC,KAAI,CAAC,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC5B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;YACxB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAA;IACN,CAAC;IA/CL;QAAC,gBAAS,CAAE;YACR,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,CAAC,yBAAgB,EAAE,cAAO,CAAC,yBAAgB,EAAE,EAAC,QAAQ,EAAE,6BAAoB,EAAC,CAAC,CAAC;SAC7F,CAAC;QAED,WAAI,CAAE;YACH,QAAQ,EAAE,iDAET;YACD,UAAU,EAAE,CAAC,WAAI,EAAE,mBAAU,EAAE,0BAAiB,CAAC;SACpD,CAAC;QAED,oBAAW,CAAC;YACT;gBACI,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,WAAI;gBACf,YAAY,EAAE,IAAI;aACrB;YACD;gBACI,IAAI,EAAE,qBAAqB;gBAC3B,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,WAAI;aAClB;YACD;gBACI,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,WAAI;aAClB;YACD,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,SAAS,CAAC,EAAE;SAC3C,CAAC;;WAAA;IAkBF,UAAC;AAAD,CAhBA,AAgBC,IAAA;AAhBY,WAAG,MAgBf,CAAA;AAED,mBAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC","file":"app.js","sourcesContent":["import {Component, provide, View, Inject} from 'angular2/core';\nimport {RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS, Router, RouterLink, LocationStrategy, HashLocationStrategy} from 'angular2/router';\nimport {Todo} from './directives/todo/todo';\nimport {bootstrap} from 'angular2/platform/browser';\n\ndeclare var io: any;\n\n@Component ({\n    selector: 'app',\n    providers: [ROUTER_PROVIDERS, provide(LocationStrategy, {useClass: HashLocationStrategy})],\n})\n\n@View ({\n    template: `\n        <router-outlet></router-outlet>\n    `,\n    directives: [Todo, RouterLink, ROUTER_DIRECTIVES],\n})\n\n@RouteConfig([\n    {\n        path: '/tasks/all',\n        name: 'TaskAll',\n        component: Todo,\n        useAsDefault: true\n    },\n    {\n        path: '/tasks/detail/:name',\n        name: 'TaskDetail',\n        component: Todo,\n    },\n    {\n        path: '/tasks/:list',\n        name: 'TaskList',\n        component: Todo,\n    },\n    { path: '/**', redirectTo: ['TaskAll'] }\n])\n\nexport class App {\n    private socket: any;\n    private currentRoute: string;\n    \n    constructor(private router: Router) {\n        this.socket = io();\n        this.socket.on(\"changeRoute\", (route) => {\n            if(this.currentRoute != route) {\n                this.currentRoute = route;\n                this.router.navigateByUrl(route);   \n            }\n        });\n        this.router.subscribe((route) => {\n            this.socket.emit(\"changeRoute\", route);\n        })\n    }\n}\n\nbootstrap(App, []).catch(console.error);"],"sourceRoot":"/source/"}